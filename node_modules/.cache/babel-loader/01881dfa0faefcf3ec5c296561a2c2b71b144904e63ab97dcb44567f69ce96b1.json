{"ast":null,"code":"var _jsxFileName = \"/Users/lucacaimi/Desktop/typescript-weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport SearchSection from \"../src/components/SearchSection\";\n\n//\n//every react comp need to be define\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [term, setTerm] = useState(\"\");\n  const [city, setCity] = useState(null);\n  const [option, setOption] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOption = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=f281ad23c454d69d7b050e565c983d52`).then(res => res.json()).then(data => setOption(data));\n  };\n\n  //\n  // e is an inplicit type, tell to the code that is expentig something\n  const onChangeInput = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === \"\") return;\n    getSearchOption(value);\n  };\n  //\n  //\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/3.0/onecall?lat=${city.lat}&lon=${city.lon}&unit=metric&appid=f281ad23c454d69d7b050e565c983d52`).then(res => res.json()).then(data => setForecast());\n  };\n\n  //\n  //\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const optionSelect = item => {\n    setCity(item);\n  };\n  //\n  //use effect reset the search, but will use the city selected as the new state\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOption([]);\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\",\n    children: forecast ? \"we have a forecast\" : /*#__PURE__*/_jsxDEV(SearchSection, {\n      term: term,\n      option: option,\n      onChangeInput: onChangeInput,\n      optionSelect: optionSelect,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jj2ZySv9gGSTnP7VwnmpVqh5eAs=\");\n_c = App;\nexport default App;\n\n// https://api.openweathermap.org/data/3.0/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}\n// f281ad23c454d69d7b050e565c983d52\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SearchSection","jsxDEV","_jsxDEV","App","_s","term","setTerm","city","setCity","option","setOption","forecast","setForecast","getSearchOption","value","fetch","trim","then","res","json","data","onChangeInput","e","target","getForecast","lat","lon","onSubmit","optionSelect","item","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucacaimi/Desktop/typescript-weather-app/src/App.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\nimport { optionType } from \"./components/Icons/types\";\nimport SearchSection from \"../src/components/SearchSection\";\n\n//\n//every react comp need to be define\nconst App = (): JSX.Element => {\n  const [term, setTerm] = useState<string>(\"\");\n  const [city, setCity] = useState<optionType | null>(null);\n  const [option, setOption] = useState<[]>([]);\n  const [forecast, setForecast] = useState<forecastType | null>(null);\n  const getSearchOption = (value: string) => {\n    fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=f281ad23c454d69d7b050e565c983d52`\n    )\n      .then((res) => res.json())\n      .then((data) => setOption(data));\n  };\n\n  //\n  // e is an inplicit type, tell to the code that is expentig something\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    setTerm(value);\n\n    if (value === \"\") return;\n\n    getSearchOption(value);\n  };\n  //\n  //\n  const getForecast = (city: optionType) => {\n    fetch(\n      `https://api.openweathermap.org/data/3.0/onecall?lat=${city.lat}&lon=${city.lon}&unit=metric&appid=f281ad23c454d69d7b050e565c983d52`\n    )\n      .then((res) => res.json())\n      .then((data) => setForecast());\n  };\n\n  //\n  //\n  const onSubmit = () => {\n    if (!city) return;\n\n    getForecast(city);\n  };\n\n  const optionSelect = (item: optionType) => {\n    setCity(item);\n  };\n  //\n  //use effect reset the search, but will use the city selected as the new state\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOption([]);\n    }\n  }, [city]);\n\n  return (\n    <main className=\"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\">\n      {forecast ? (\n        \"we have a forecast\"\n      ) : (\n        <SearchSection\n          term={term}\n          option={option}\n          onChangeInput={onChangeInput}\n          optionSelect={optionSelect}\n          onSubmit={onSubmit}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default App;\n\n// https://api.openweathermap.org/data/3.0/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}\n// f281ad23c454d69d7b050e565c983d52\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,OAAOC,aAAa,MAAM,iCAAiC;;AAE3D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAK,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAsB,IAAI,CAAC;EACnE,MAAMc,eAAe,GAAIC,KAAa,IAAK;IACzCC,KAAK,CACF,kDAAiDD,KAAK,CAACE,IAAI,CAAC,CAAE,iDACjE,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,SAAS,CAACU,IAAI,CAAC,CAAC;EACpC,CAAC;;EAED;EACA;EACA,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IAC1D,MAAMR,KAAK,GAAGQ,CAAC,CAACC,MAAM,CAACT,KAAK,CAACE,IAAI,CAAC,CAAC;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAElBD,eAAe,CAACC,KAAK,CAAC;EACxB,CAAC;EACD;EACA;EACA,MAAMU,WAAW,GAAIjB,IAAgB,IAAK;IACxCQ,KAAK,CACF,uDAAsDR,IAAI,CAACkB,GAAI,QAAOlB,IAAI,CAACmB,GAAI,qDAClF,CAAC,CACET,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKR,WAAW,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA;EACA,MAAMe,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACpB,IAAI,EAAE;IAEXiB,WAAW,CAACjB,IAAI,CAAC;EACnB,CAAC;EAED,MAAMqB,YAAY,GAAIC,IAAgB,IAAK;IACzCrB,OAAO,CAACqB,IAAI,CAAC;EACf,CAAC;EACD;EACA;EACA/B,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAACuB,IAAI,CAAC;MAClBpB,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAM6B,SAAS,EAAC,2GAA2G;IAAAC,QAAA,EACxHrB,QAAQ,GACP,oBAAoB,gBAEpBT,OAAA,CAACF,aAAa;MACZK,IAAI,EAAEA,IAAK;MACXI,MAAM,EAAEA,MAAO;MACfY,aAAa,EAAEA,aAAc;MAC7BO,YAAY,EAAEA,YAAa;MAC3BD,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAChC,EAAA,CApEID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAsET,eAAeA,GAAG;;AAElB;AACA;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}